import { describe, it, expect } from 'vitest';
import generateChineseName from './chineseName.js'; // 请根据实际路径进行调整

describe('测试 do_data_chineseName 函数', () => {
    it('应返回一个字符串', () => {
        const name = generateChineseName();
        expect(typeof name).toBe('string');
    });

    it('应返回包含一个姓氏和名字的字符串', () => {
        const name = generateChineseName();
        const surname = name.slice(0, 1);
        const firstName = name.slice(1);

        expect(surnames).toContain(surname); // 确认姓氏在预定义列表中
        expect(firstName.length).toBeGreaterThan(0); // 确认名字不为空
        expect(names).toContain(firstName); // 确认名字在预定义列表中
    });

    it('应生成不同的姓名', () => {
        const name1 = generateChineseName();
        const name2 = generateChineseName();
        expect(name1).not.toBe(name2); // 确认生成的姓名不相同
    });
});

// 预定义的姓氏和名字列表，用于验证生成的姓名
const surnames = ['赵', '钱', '孙', '李', '周', '吴', '郑', '王', '冯', '陈', '褚', '卫', '蒋', '沈', '韩', '杨', '朱', '秦', '尤', '许', '何', '吕', '施', '张', '孔', '曹', '严', '华', '金', '魏', '陶', '姜', '戚', '谢', '邹', '喻', '柏', '水', '窦', '章', '云', '苏', '潘', '葛', '奚', '范', '彭', '郎', '鲁', '韦', '昌', '马', '苗', '凤', '花', '方', '俞', '任', '袁', '柳', '酆', '鲍', '史', '唐', '费', '廉', '岑', '薛', '雷', '贺', '倪', '汤', '滕', '殷', '罗', '毕', '郝', '邬', '安', '常', '乐', '于', '时', '傅', '皮', '卞', '齐', '康', '伍', '余', '元', '卜', '顾', '孟', '平', '黄'];

const names = ['子璇', '淼', '国栋', '夫子', '瑞堂', '甜', '敏', '尚', '国贤', '贺祥', '晨涛', '昊轩', '易轩', '辰益', '帆', '冉', '瑾', '春', '瑾昆', '春齐', '杨', '文昊', '东雄', '霖', '浩晨', '熙涵', '溶溶', '冰枫', '欣宜', '豪', '欣慧', '建政', '美欣', '淑慧', '文轩', '杰', '欣源', '忠林', '榕润', '欣汝', '慧嘉', '新建', '建林', '亦菲', '林', '冰洁', '佳欣', '涵涵', '禹辰', '淳美', '泽惠', '伟洋', '涵越', '润丽', '翔', '淑华', '晶莹', '凌晶', '苒溪', '雨涵', '嘉怡', '佳毅', '子辰', '佳琪', '紫轩', '瑞辰', '昕蕊', '萌', '明远', '欣宜', '泽远', '欣怡', '佳怡', '佳惠', '晨茜', '晨璐', '运昊', '汝鑫', '淑君', '晶滢', '润莎', '榕汕', '佳钰', '佳玉', '晓庆', '一鸣', '语晨', '添池', '添昊', '雨泽', '雅晗', '雅涵', '清妍', '诗悦', '嘉乐', '晨涵', '天赫', '玥傲', '佳昊', '天昊', '萌萌', '若萌'];
